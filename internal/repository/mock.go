// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package repository

import (
	mock "github.com/stretchr/testify/mock"
)

// MockWalletRepository is an autogenerated mock type for the WalletRepository type
type MockWalletRepository struct {
	mock.Mock
}

// TransferFound provides a mock function with given fields: fromUserID, toUserID, sum, idempotenceKey
func (_m *MockWalletRepository) TransferFound(fromUserID int, toUserID int, sum float64, idempotenceKey string) error {
	ret := _m.Called(fromUserID, toUserID, sum, idempotenceKey)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int, float64, string) error); ok {
		r0 = rf(fromUserID, toUserID, sum, idempotenceKey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWalletRepositoryMock is used as constructor for mock.
func NewWalletRepositoryMock() *MockWalletRepository {
	mockWalletRepo := &MockWalletRepository{}
	mockWalletRepo.On("TransferFound", 1, 2, 100.0, IdempotenceKeyGood()).Return(nil).Once()
	mockWalletRepo.On("TransferFound", 1, 2, 500.0, IdempotenceKeyGood()).Return(nil).Once()
	mockWalletRepo.On("TransferFound", 1, 2, 600.0, IdempotenceKeyGood()).Return(ErrInsufficientFunds).Once()
	mockWalletRepo.On("TransferFound", 1, 2, 200.0, IdempotenceKeyIncorrect()).Return(ErrIdempontenceKeyNoFound).Once()
	return mockWalletRepo
}

// IdempotenceKeyGood is used for get correct idempotency key.
func IdempotenceKeyGood() string {
	return "7c708476-b79e-11eb-808a-0242c0a8d003"
}

// IdempotenceKeyIncorrect is used for get incorrect idempotency key.
func IdempotenceKeyIncorrect() string {
	return "sdfasdjf;asjdfajsdfksdjfdkj"
}
